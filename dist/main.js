(()=>{"use strict";const e=document.querySelector(".content");function t(){e.innerHTML="",(JSON.parse(localStorage.getItem("tasks"))||[]).forEach((e=>{n(e)}))}function n(t){const n=document.createElement("div");n.classList.add("taskcards"),n.innerHTML=`\n        <input type="checkbox" class="checkbox" ${t.checked?"checked":""}>\n        <div class="cardTitle"> ${t.title}</div>\n        <div class="cardDate"> Due Date: ${t.date}</div>\n        <div class="cardPriority"> Priority: ${t.priority}</div>\n        <div class="cardCategory"> Category: ${t.category}</div>\n        <div class="cardDescrip"> Details: ${t.description}</div>\n        <div class="edit">\n            <object class="editicont" data="./images/square-edit-outline.png"></object>\n        </div>\n        <div class="trash">\n            <object class="trashicont" data="./images/trash-can-outline.png"></object>\n        </div>`,n.querySelector(".editicont").setAttribute("data-task-index",t.index),n.querySelector(".trashicont").setAttribute("data-task-index",t.index),e.appendChild(n)}function a(){const e=document.querySelector(".categoryList");e.innerHTML="",(JSON.parse(localStorage.getItem("category"))||[]).forEach((t=>{const n=document.createElement("li");n.classList.add("category");const a=document.createElement("div");a.classList.add("categorytext");const o=document.createElement("div");o.classList.add("icons"),a.innerHTML=t.title,n.appendChild(a),o.innerHTML='<div class="edit">     <object class="editiconc" data="./images/square-edit-outline.png"></object></div><div class="trash">     <object class="trashiconc" data="./images/trash-can-outline.png"></object></div>',n.appendChild(o),e.appendChild(n)}))}function o(){const e=document.querySelector(".overlay");document.querySelector(".formcontainer"),e.style.display="flex"}const c=document.querySelector(".content"),i=document.querySelector(".addtask"),r=document.querySelector(".addcat"),s=document.querySelector(".exiticon"),l=document.querySelector(".categoryList"),d=document.querySelector(".default"),u=document.querySelector("#home"),m=document.querySelector("#today"),g=document.querySelector("#thisweek");document.addEventListener("DOMContentLoaded",(()=>{t(),a()})),i.addEventListener("click",(()=>{o(),function(){const e=document.querySelector(".formcontainer");let t=document.createElement("div");t.classList.add("createtask"),e.appendChild(t),t.innerHTML='<form action="" method="get" id="taskform">    <ul class="input">        <li><input type="text" id="title" placeholder="Title:" required></li>        <li><textarea id="descrip" placeholder="Optional Description" maxlength="1000"></textarea></li>        <li><input type="date" id="date"></li>    </ul>    <input type="radio" name="taskform" class="high priority" value="high" checked>High    <input type="radio" name="taskform" class="medium priority" value="medium">Medium    <input type="radio" name="taskform" class="low priority" value="low">Low    <select id="categoryDropdown" name="taskform">        <option value="Default">Default</option>    </select>    <button type="submit" form="taskform" class="submitbtn">Add Task</button></form>';const n=JSON.parse(localStorage.getItem("category"))||[],a=t.querySelector("#categoryDropdown");for(let e=0;e<n.length;e++){const t=document.createElement("option");t.value=n[e].title,t.text=n[e].title,a.appendChild(t)}}(),document.getElementById("taskform").addEventListener("submit",(e=>{const t=function(){const e=document.getElementById("title").value,t=document.getElementById("descrip").value,n=document.getElementById("date").value,a=document.querySelectorAll('[name="taskform"]');let o=null;for(const e of a)if(e.checked){o=e.value;break}return{title:e,description:t,date:n,priority:o,category:document.getElementById("categoryDropdown").value,checked:!1,index:(JSON.parse(localStorage.getItem("tasks"))||[]).length}}();let n=JSON.parse(localStorage.getItem("tasks"))||[];n.push(t),n=n.sort(((e,t)=>{const n=new Date(e.date)-new Date(t.date);if(0!==n)return n;{const n={high:0,medium:1,low:2};return n[e.priority]-n[t.priority]}})),localStorage.setItem("tasks",JSON.stringify(n))})),t()})),r.addEventListener("click",(()=>{o(),function(){const e=document.querySelector(".formcontainer");let t=document.createElement("div");t.classList.add("createCategory"),e.appendChild(t),t.innerHTML='<form action="" method="get" id="categoryform">    <ul class="input">        <li><input type="text" id="title" placeholder="Title:" required></li>    </ul>    <button type="submit" form="categoryform" class="submitbtn">Add Category</button></form>'}(),document.getElementById("categoryform").addEventListener("submit",(e=>{const t={title:document.getElementById("title").value},n=JSON.parse(localStorage.getItem("category"))||[];n.push(t),localStorage.setItem("category",JSON.stringify(n))})),a()})),s.addEventListener("click",(()=>{!function(){const e=document.querySelector(".overlay"),t=document.querySelector(".formcontainer");e.style.display="none",t.innerHTML=""}()})),c.addEventListener("click",(function(e){e.target.classList.contains("editicont")&&(o(),function(e){const n=e.target,a=parseInt(n.getAttribute("data-task-index")),o=localStorage.getItem("tasks"),c=JSON.parse(o)||[],i=c.find((e=>e.index===a)),r=document.querySelector(".formcontainer"),s=document.createElement("form");r.appendChild(s),s.innerHTML=`\n        <ul class="input">\n        <li><input type="text" id="editedTitle" value="${i.title}"></li>\n        <li><textarea id="editedDescription">${i.description}</textarea></li>\n        <li><input type="date" id="editedDate" value="${i.date}"></li>\n        </ul>\n        <input type="radio" name="taskPriority" class="high priority" value="high" ${"high"===i.priority?"checked":""}>High\n        <input type="radio" name="taskPriority" class="medium priority" value="medium" ${"medium"===i.priority?"checked":""}>Medium\n        <input type="radio" name="taskPriority" class="low priority" value="low" ${"low"===i.priority?"checked":""}>Low\n        <select id="editedDropdown" name="taskCategory"><option value="Default">Default</option></select>\n        <button type="submit" id="saveEdit">Save Changes</button>\n    `;const l=JSON.parse(localStorage.getItem("category"))||[],d=s.querySelector("#editedDropdown");for(let e=0;e<l.length;e++){const t=document.createElement("option");t.value=l[e].title,t.text=l[e].title,i.category===l[e].title&&(t.selected=!0),d.appendChild(t)}document.getElementById("saveEdit").addEventListener("click",(function(){i.title=document.getElementById("editedTitle").value,i.description=document.getElementById("editedDescription").value,i.date=document.getElementById("editedDate").value,i.priority=document.querySelector('input[name="taskPriority"]:checked').value,i.category=d.value,localStorage.setItem("tasks",JSON.stringify(c)),t(),overlay.style.display="none"}))}(e))})),c.addEventListener("click",(function(e){e.target.classList.contains("trashicont")&&function(e){const n=e.target,a=parseInt(n.getAttribute("data-task-index"));console.log(a);const o=localStorage.getItem("tasks"),c=JSON.parse(o)||[],i=c.findIndex((e=>e.index===a));c.splice(i,1),c.forEach(((e,t)=>{e.index=t;const n=document.querySelector(`[data-task-index="${a}"].editicont`);n&&n.setAttribute("data-task-index",t);const o=document.querySelector(`[data-task-index="${a}"].trashicont`);o&&o.setAttribute("data-task-index",t)})),localStorage.setItem("tasks",JSON.stringify(c)),t()}(e)})),c.addEventListener("change",(function(e){e.target.classList.contains("checkbox")&&function(e){const t=document.querySelector(".content"),n=e.target,a=n.closest(".taskcards"),o=Array.from(t.children).indexOf(a),c=JSON.parse(localStorage.getItem("tasks"))||[];c[o].checked=n.checked,n.checked?(a.classList.add("complete"),a.classList.remove("incomplete"),console.log("task done")):(a.classList.add("incomplete"),a.classList.remove("complete"),console.log("task not done")),localStorage.setItem("tasks",JSON.stringify(c))}(e)})),l.addEventListener("click",(function(e){e.target.classList.contains("editiconc")&&(o(),function(e){const n=e.target,o=document.querySelectorAll(".editiconc"),c=Array.from(o).indexOf(n),i=localStorage.getItem("category"),r=JSON.parse(i)||[],s=r[c],l=document.querySelector(".formcontainer"),d=document.createElement("form");l.appendChild(d),d.innerHTML=`\n        <ul class="input">\n            <li><input type="text" id="editedCategory" value="${s.title}" required></li>\n        </ul>\n        <button type="submit" id="saveCat">Update Category</button>\n    `,document.getElementById("saveCat").addEventListener("click",(function(e){const n=localStorage.getItem("tasks"),o=JSON.parse(n)||[];o.forEach((e=>{e.category==s.title&&(e.category=document.getElementById("editedCategory").value)})),localStorage.setItem("tasks",JSON.stringify(o)),s.title=document.getElementById("editedCategory").value,localStorage.setItem("category",JSON.stringify(r)),a(),t(),overlay.style.display="none"}))}(e))})),l.addEventListener("click",(function(e){e.target.classList.contains("trashiconc")&&function(e){const n=e.target,o=localStorage.getItem("category"),c=JSON.parse(o)||[],i=document.querySelectorAll(".trashiconc"),r=Array.from(i).indexOf(n),s=c[r],l=localStorage.getItem("tasks"),d=JSON.parse(l)||[];for(let e=0;e<d.length;e++)d[e].category===s.title&&(d[e].category="Default");localStorage.setItem("tasks",JSON.stringify(d)),c.splice(r,1),localStorage.setItem("category",JSON.stringify(c)),a(),t()}(e)})),m.addEventListener("click",(()=>{!function(){document.querySelector(".content").innerHTML="",document.querySelector(".pagetitle").textContent="Today's Tasks";const e=JSON.parse(localStorage.getItem("tasks"))||[],t=new Date;t.setHours(0,0,0,0),e.filter((e=>{const n=new Date(e.date);return n.setHours(0,0,0,0),n.getTime()===t.getTime()})).forEach((e=>{n(e)}))}()})),g.addEventListener("click",(()=>{!function(){document.querySelector(".content").innerHTML="",document.querySelector(".pagetitle").textContent="This Week's Tasks";const e=JSON.parse(localStorage.getItem("tasks"))||[],t=new Date;t.setHours(0,0,0,0);const a=new Date(t);a.setDate(t.getDate()-t.getDay());const o=new Date(t);o.setDate(t.getDate()-t.getDay()+6),o.setHours(23,59,59,999),e.filter((e=>{const t=new Date(e.date);return t.setHours(0,0,0,0),t>=a&&t<=o})).forEach((e=>{n(e)}))}()})),u.addEventListener("click",(()=>{document.querySelector(".pagetitle").textContent="All Tasks",t()})),l.addEventListener("click",(function(e){e.target.classList.contains("category")&&function(e){document.querySelector(".content").innerHTML="",document.querySelector(".pagetitle").textContent=`${e.target.innerText} Tasks`,(JSON.parse(localStorage.getItem("tasks"))||[]).filter((t=>t.category===e.target.innerText)).forEach((e=>{n(e)}))}(e)})),d.addEventListener("click",(()=>{document.querySelector(".content").innerHTML="",document.querySelector(".pagetitle").textContent="Default Tasks",(JSON.parse(localStorage.getItem("tasks"))||[]).filter((e=>"Default"===e.category)).forEach((e=>{n(e)}))}))})();